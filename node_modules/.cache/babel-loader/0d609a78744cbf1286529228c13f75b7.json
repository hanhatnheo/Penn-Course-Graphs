{"ast":null,"code":"import _objectSpread from \"/Users/nhathapt/Documents/GitHub/Penn-Course-Graphs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/nhathapt/Documents/GitHub/Penn-Course-Graphs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/nhathapt/Documents/GitHub/Penn-Course-Graphs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/nhathapt/Documents/GitHub/Penn-Course-Graphs/src/App.js\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport './App.css';\nimport Graph from 'vis-react';\nimport initialGraph from \"./data.json\";\nimport React, { useEffect, useState } from 'react';\nimport { Box, Typography, Chip, Stack } from '@mui/material';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport ListItemText from '@mui/material/ListItemText';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport Checkbox from '@mui/material/Checkbox';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nvar highlightActive = false;\nvar options = {\n  layout: {\n    randomSeed: 2,\n    improvedLayout: false\n  },\n  nodes: {\n    fixed: {\n      x: false,\n      y: false\n    },\n    shape: \"dot\",\n    size: 10,\n    borderWidth: 1.5,\n    borderWidthSelected: 2,\n    font: {\n      size: 15,\n      align: \"center\",\n      bold: {\n        color: \"#bbbdc0\",\n        size: 15,\n        vadjust: 0,\n        mod: \"bold\"\n      }\n    },\n    shapeProperties: {\n      interpolation: false // 'true' for intensive zooming\n    }\n  },\n\n  edges: {\n    width: 0.01,\n    color: {\n      color: \"#D3D3D3\",\n      highlight: \"#797979\",\n      hover: \"#797979\",\n      opacity: 1.0\n    },\n    smooth: {\n      type: \"continuous\",\n      roundness: 0\n    }\n  },\n  // physics: {\n  //   enabled: true,\n  // },\n  physics: {\n    forceAtlas2Based: {\n      gravitationalConstant: -26,\n      centralGravity: 0.005,\n      springLength: 230,\n      springConstant: 0.18,\n      avoidOverlap: 1.5\n    },\n    maxVelocity: 146,\n    solver: 'forceAtlas2Based',\n    timestep: 0.35,\n    stabilization: {\n      enabled: true,\n      iterations: 1000,\n      updateInterval: 25\n    }\n  },\n  // physics: {\n  //   barnesHut: {\n  //     gravitationalConstant: -30000,\n  //     centralGravity: 1,\n  //     springLength: 70,\n  //     avoidOverlap: 1\n  //   },\n  //   stabilization: { iterations: 2500 }\n  // },\n  interaction: {\n    hover: true,\n    hoverConnectedEdges: true,\n    hoverEdges: true,\n    selectable: false,\n    selectConnectedEdges: false,\n    zoomView: true,\n    dragView: true,\n    zoomSpeed: 0.5\n  }\n};\nvar nodesArr = [];\nvar edgesArr = [];\nvar data = initialGraph;\nObject.keys(data).forEach(function (key) {\n  if (nodesArr.filter(function (n) {\n    return n.id === key;\n  }).length > 0) {\n    return;\n  }\n  nodesArr.push({\n    id: key,\n    label: key,\n    title: data[key].name,\n    department: data[key].department,\n    color: 'blue'\n  });\n  if (\"prereqs\" in data[key]) {\n    if (\"AND\" in data[key].prereqs) {\n      if (nodesArr.filter(function (n) {\n        return n.id === key + \"_AND\";\n      }).length > 0) {\n        return;\n      }\n      nodesArr.push({\n        id: key + \"_AND\",\n        label: 'PREREQ OF',\n        title: key + \"_AND\",\n        department: data[key].department,\n        color: 'blue'\n      });\n      edgesArr.push({\n        from: key + \"_AND\",\n        to: key,\n        color: '#D3D3D3',\n        department: data[key].department\n      });\n      data[key].prereqs.AND.forEach(function (courseId) {\n        if (typeof courseId === 'string') {\n          edgesArr.push({\n            from: courseId,\n            to: key + \"_AND\",\n            color: '#D3D3D3',\n            department: data[key].department\n          });\n        }\n        if (typeof courseId === 'object' && 'OR' in courseId && courseId.OR.length > 0) {\n          if (nodesArr.filter(function (n) {\n            return n.id === key + \"_OR\";\n          }).length > 0) {\n            return;\n          }\n          nodesArr.push({\n            id: key + \"_OR\",\n            label: 'TAKE EITHER',\n            title: key + \"_OR\",\n            department: data[key].department,\n            color: 'blue'\n          });\n          edgesArr.push({\n            from: key + \"_OR\",\n            to: key + \"_AND\",\n            color: '#D3D3D3',\n            department: data[key].department\n          });\n          courseId.OR.forEach(function (orCourseId) {\n            edgesArr.push({\n              from: courseId,\n              to: key + \"_OR\",\n              color: '#D3D3D3',\n              department: data[key].department\n            });\n          });\n        }\n      });\n    }\n    if (\"OR\" in data[key].prereqs) {\n      if (nodesArr.filter(function (n) {\n        return n.id === key + \"_OR\";\n      }).length > 0) {\n        return;\n      }\n      nodesArr.push({\n        id: key + \"_OR\",\n        label: 'TAKE EITHER',\n        title: key + \"_OR\",\n        department: data[key].department,\n        color: 'blue'\n      });\n      edgesArr.push({\n        from: key + \"_OR\",\n        to: key,\n        color: '#D3D3D3',\n        department: data[key].department\n      });\n      data[key].prereqs.OR.forEach(function (courseId) {\n        if (typeof courseId === 'string') {\n          edgesArr.push({\n            from: courseId,\n            to: key + \"_OR\",\n            color: '#D3D3D3',\n            department: data[key].department\n          });\n        }\n      });\n    }\n  }\n});\nvar departments = nodesArr.map(function (node) {\n  return node.department;\n});\ndepartments = _toConsumableArray(new Set(departments));\nvar department_colors = {};\ndepartments.map(function (department) {\n  var randomColor = '#' + Math.floor(Math.random() * 16777215).toString(16);\n  department_colors[department] = randomColor;\n});\nnodesArr.forEach(function (node) {\n  node.color = department_colors[node.department];\n});\nfunction App() {\n  var _this = this;\n  useEffect(function () {}, []);\n  var filteredTerms = ['CIS'];\n  var newGraph = {\n    nodes: nodesArr.filter(function (node) {\n      return filteredTerms.some(function (term) {\n        return node.department === term;\n      });\n    }),\n    edges: edgesArr.filter(function (edge) {\n      return filteredTerms.some(function (term) {\n        return edge.department === term;\n      });\n    })\n  };\n  var _useState = useState({\n      graph: newGraph,\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      network: null\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    graph = _useState2[0],\n    setGraph = _useState2[1];\n  var getNetwork = function getNetwork(data) {\n    setGraph(function (prev) {\n      var prevObj = Object.assign({}, prev);\n      prevObj.network = data;\n      return prevObj;\n    });\n  };\n  var getEdges = function getEdges(data) {\n    console.log(data);\n  };\n  var getNodes = function getNodes(data) {\n    console.log(data);\n  };\n  var findCourseSequence = function findCourseSequence(graph) {\n    findCourseSequence();\n  };\n  var neighbourhoodHighlight = function neighbourhoodHighlight(params, searchData) {\n    var allNodes = graph.graph.nodes;\n    // let allEdges = graph.graph.edges;\n    // let cloneNodes = allNodes.map(a => {return {...a}});\n    var cloneNodes = allNodes.map(function (a) {\n      return _objectSpread({}, a);\n    });\n    // let cloneEdges = allEdges.map(a => {return {...a}});\n    var selectedNode = params.node;\n    cloneNodes.forEach(function (node) {\n      if (node.id === selectedNode) {\n        node.color = 'red';\n      }\n    });\n    var connectedNodes = graph.network.getConnectedNodes(selectedNode);\n    // let connectedEdges = graph.network.getConnectedEdges(selectedNode);\n    var _iterator = _createForOfIteratorHelper(connectedNodes),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var node = _step.value;\n        connectedNodes = connectedNodes.concat(graph.network.getConnectedNodes(node));\n        // for (var n1 of graph.network.getConnectedNodes(node)) {\n        //   connectedNodes = connectedNodes.concat(\n        //     graph.network.getConnectedNodes(n1)\n        //   )\n        //   for (var n2 of graph.network.getConnectedNodes(n1)) {\n        //     connectedNodes = connectedNodes.concat(\n        //       graph.network.getConnectedNodes(n2)\n        //     )\n        //   }\n        // }\n        // connectedEdges = connectedEdges.concat(\n        //   graph.network.getConnectedEdges(node)\n        // )\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    cloneNodes.forEach(function (node) {\n      if (connectedNodes.some(function (name) {\n        return node.id.includes(name);\n      })) {\n        node.color = 'red';\n      } else {\n        if (connectedNodes.length > 1) {\n          node.color = 'gray';\n        }\n      }\n    });\n\n    // graph.graph.edges.forEach( edge => {\n    //   if (connectedEdges.some(name => edge.id.includes(name))) {\n    //     console.log(edge)\n    //     edge.color = 'red'\n    //   }\n    // })\n\n    var newGraph = {\n      nodes: cloneNodes,\n      edges: graph.graph.edges\n    };\n    setGraph({\n      graph: newGraph,\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      network: graph.network\n    });\n  };\n  var resetGraphColor = function resetGraphColor() {\n    var allNodes = graph.graph.nodes;\n    // let cloneNodes = allNodes.map(a => {return {...a}});\n    var Nodes = allNodes;\n    var cloneNodes = allNodes.map(function (a) {\n      return _objectSpread({}, a);\n    });\n    cloneNodes.forEach(function (node) {\n      node.color = department_colors[node.department];\n    });\n    var newGraph = {\n      nodes: cloneNodes,\n      edges: graph.graph.edges\n    };\n    setGraph({\n      graph: newGraph,\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      network: graph.network\n    });\n  };\n  var events = {\n    select: function select(event) {\n      var node = event.node,\n        edges = event.edges;\n    },\n    hoverNode: function hoverNode(event) {\n      neighbourhoodHighlight(event, {});\n    },\n    blurNode: function blurNode(event) {\n      resetGraphColor();\n    },\n    hoverEdge: function hoverEdge(event) {\n      var selectedEdge = graph.graph.edges.filter(function (edge) {\n        return edge.id === event.edge;\n      })[0];\n      neighbourhoodHighlight({\n        node: selectedEdge.from\n      }, {});\n      neighbourhoodHighlight({\n        node: selectedEdge.to\n      }, {});\n    },\n    blurEdge: function blurEdge(event) {\n      resetGraphColor();\n    }\n  };\n  var _useState3 = useState(['Computer and Information Science (CIS)']),\n    _useState4 = _slicedToArray(_useState3, 2),\n    filterOption = _useState4[0],\n    setFilterOption = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    nodeNumber = _useState6[0],\n    setNodeNumer = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    edgeNumber = _useState8[0],\n    setEdgeNumber = _useState8[1];\n  useEffect(function () {\n    var newGraph = {\n      nodes: nodesArr.filter(function (node) {\n        return filterOption.some(function (term) {\n          return node.department.includes(term);\n        });\n      }),\n      edges: edgesArr.filter(function (edge) {\n        return filterOption.some(function (term) {\n          return edge.department.includes(term);\n        });\n      })\n    };\n    setNodeNumer(nodesArr.filter(function (node) {\n      return filterOption.some(function (term) {\n        return node.department.includes(term);\n      });\n    }).length);\n    setEdgeNumber(edgesArr.filter(function (edge) {\n      return filterOption.some(function (term) {\n        return edge.department.includes(term);\n      });\n    }).length);\n    setGraph(function (prev) {\n      var prevObj = Object.assign({}, prev);\n      prevObj.graph = newGraph;\n      return prevObj;\n    });\n  }, [filterOption]);\n  window.addEventListener('resize', function () {\n    if (graph.network !== null) {\n      graph.network.redraw();\n      graph.network.fit();\n    }\n  });\n  var handleChange = function handleChange(event) {\n    var value = event.target.value;\n    setFilterOption(\n    // On autofill we get a stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n  var ITEM_HEIGHT = 48;\n  var ITEM_PADDING_TOP = 8;\n  var MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 10 + ITEM_PADDING_TOP\n      }\n    }\n  };\n  var theme = createTheme({\n    palette: {\n      primary: {\n        main: '#0000FF'\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100vw',\n      height: '100vh',\n      position: 'fixed'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Graph, {\n    graph: graph.graph,\n    style: graph.style,\n    options: options,\n    getNetwork: getNetwork,\n    getEdges: getEdges,\n    getNodes: getNodes,\n    events: events,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      position: 'fixed',\n      top: '20px',\n      left: '30px',\n      fontSize: '20px',\n      border: '1px solid blue',\n      borderRadius: '10px',\n      p: '10px 12px',\n      background: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 9\n    }\n  }, \"Penn Course Graph\"), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      position: 'fixed',\n      top: '20px',\n      right: '30px',\n      fontSize: '20px',\n      border: '1px solid blue',\n      borderRadius: '10px',\n      p: '10px 12px',\n      background: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    sx: {\n      ml: 1.5,\n      textAlign: 'left',\n      color: 'blue',\n      fontSize: '16px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 11\n    }\n  }, \"Display graph for the desired departments\"), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      m: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    sx: {\n      m: 1,\n      width: 'fit-content',\n      maxWidth: '800px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-multiple-checkbox-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 11\n    }\n  }, \"Departments\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-multiple-checkbox-label\",\n    id: \"demo-multiple-checkbox\",\n    multiple: true,\n    value: filterOption,\n    onChange: handleChange,\n    input: /*#__PURE__*/React.createElement(OutlinedInput, {\n      label: \"Departments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 20\n      }\n    }),\n    renderValue: function renderValue(selected) {\n      return selected.join(', ');\n    },\n    MenuProps: MenuProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 11\n    }\n  }, departments.map(function (name) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: name,\n      value: name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: filterOption.indexOf(name) > -1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 17\n      }\n    }));\n  }))), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      m: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    sx: {\n      textAlign: 'left',\n      ml: 1.5,\n      color: 'blue',\n      fontSize: '16px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 9\n    }\n  }, \"Graph Statistics\"), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      m: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Stack, {\n    sx: {\n      ml: 1\n    },\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Chip, {\n    color: \"primary\",\n    label: \"Num. Filters: \" + filterOption.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Chip, {\n    color: \"primary\",\n    label: \"Num. Courses: \" + nodeNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Chip, {\n    color: \"primary\",\n    label: \"Num. Edges: \" + edgeNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 13\n    }\n  })))));\n}\nexport default App;","map":{"version":3,"names":["Graph","initialGraph","React","useEffect","useState","Box","Typography","Chip","Stack","OutlinedInput","InputLabel","MenuItem","FormControl","ListItemText","Select","SelectChangeEvent","Checkbox","createTheme","ThemeProvider","highlightActive","options","layout","randomSeed","improvedLayout","nodes","fixed","x","y","shape","size","borderWidth","borderWidthSelected","font","align","bold","color","vadjust","mod","shapeProperties","interpolation","edges","width","highlight","hover","opacity","smooth","type","roundness","physics","forceAtlas2Based","gravitationalConstant","centralGravity","springLength","springConstant","avoidOverlap","maxVelocity","solver","timestep","stabilization","enabled","iterations","updateInterval","interaction","hoverConnectedEdges","hoverEdges","selectable","selectConnectedEdges","zoomView","dragView","zoomSpeed","nodesArr","edgesArr","data","Object","keys","forEach","key","filter","n","id","length","push","label","title","name","department","prereqs","from","to","AND","courseId","OR","orCourseId","departments","map","node","_toConsumableArray","Set","department_colors","randomColor","Math","floor","random","toString","App","_this","filteredTerms","newGraph","some","term","edge","_useState","graph","style","height","network","_useState2","_slicedToArray","setGraph","getNetwork","prev","prevObj","assign","getEdges","console","log","getNodes","findCourseSequence","neighbourhoodHighlight","params","searchData","allNodes","cloneNodes","a","_objectSpread","selectedNode","connectedNodes","getConnectedNodes","_iterator","_createForOfIteratorHelper","_step","s","done","value","concat","err","e","f","includes","resetGraphColor","Nodes","events","select","event","hoverNode","blurNode","hoverEdge","selectedEdge","blurEdge","_useState3","_useState4","filterOption","setFilterOption","_useState5","_useState6","nodeNumber","setNodeNumer","_useState7","_useState8","edgeNumber","setEdgeNumber","window","addEventListener","redraw","fit","handleChange","target","split","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","maxHeight","theme","palette","primary","main","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","position","sx","top","left","fontSize","border","borderRadius","p","background","right","ml","textAlign","m","maxWidth","labelId","multiple","onChange","input","renderValue","selected","join","checked","indexOf","direction","spacing"],"sources":["/Users/nhathapt/Documents/GitHub/Penn-Course-Graphs/src/App.js"],"sourcesContent":["import './App.css';\nimport Graph from 'vis-react';\nimport initialGraph from \"./data.json\";\nimport React, { useEffect, useState } from 'react';\nimport { Box, Typography, Chip, Stack } from '@mui/material';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport ListItemText from '@mui/material/ListItemText';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport Checkbox from '@mui/material/Checkbox';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nvar highlightActive = false;\nlet options = {\n  layout: {\n    randomSeed: 2,\n    improvedLayout: false\n  },\n  nodes: {\n    fixed: {\n      x: false,\n      y: false\n    },\n    shape: \"dot\",\n    size: 10,\n    borderWidth: 1.5,\n    borderWidthSelected: 2,\n    font: {\n      size: 15,\n      align: \"center\",\n      bold: {\n        color: \"#bbbdc0\",\n        size: 15,\n        vadjust: 0,\n        mod: \"bold\"\n      }\n    },\n    shapeProperties: {\n      interpolation: false    // 'true' for intensive zooming\n    }\n  },\n  edges: {\n    width: 0.01,\n    color: {\n      color: \"#D3D3D3\",\n      highlight: \"#797979\",\n      hover: \"#797979\",\n      opacity: 1.0\n    },\n    smooth: {\n      type: \"continuous\",\n      roundness: 0\n    }\n  },\n  // physics: {\n  //   enabled: true,\n  // },\n  physics: {\n    forceAtlas2Based: {\n        gravitationalConstant: -26,\n        centralGravity: 0.005,\n        springLength: 230,\n        springConstant: 0.18,\n        avoidOverlap: 1.5\n    },\n    maxVelocity: 146,\n    solver: 'forceAtlas2Based',\n    timestep: 0.35,\n    stabilization: {\n        enabled: true,\n        iterations: 1000,\n        updateInterval: 25\n    }\n  },\n  // physics: {\n  //   barnesHut: {\n  //     gravitationalConstant: -30000,\n  //     centralGravity: 1,\n  //     springLength: 70,\n  //     avoidOverlap: 1\n  //   },\n  //   stabilization: { iterations: 2500 }\n  // },\n  interaction: {\n    hover: true,\n    hoverConnectedEdges: true,\n    hoverEdges: true,\n    selectable: false,\n    selectConnectedEdges: false,\n    zoomView: true,\n    dragView: true,\n    zoomSpeed: 0.5,\n  }\n};\n\nlet nodesArr = []\n\nlet edgesArr = []\n\nlet data = initialGraph;\n\nObject.keys(data).forEach( key => {\n  if (nodesArr.filter( n => n.id === key).length > 0 ) {\n    return;\n  }\n  nodesArr.push({\n    id: key,\n    label: key,\n    title: data[key].name,\n    department: data[key].department,\n    color: 'blue',\n  })\n  if (\"prereqs\" in data[key]) {\n    if (\"AND\" in data[key].prereqs) {\n      if (nodesArr.filter( n => n.id === key + \"_AND\").length > 0 ) {\n        return;\n      }\n      nodesArr.push({\n        id: key + \"_AND\",\n        label: 'PREREQ OF',\n        title: key + \"_AND\",\n        department: data[key].department,\n        color: 'blue',\n      })\n      edgesArr.push({\n        from: key + \"_AND\",\n        to: key,\n        color: '#D3D3D3',\n        department: data[key].department,\n      })\n      data[key].prereqs.AND.forEach( courseId => {\n        if (typeof courseId === 'string') {\n          edgesArr.push({\n            from: courseId,\n            to: key + \"_AND\",\n            color: '#D3D3D3',\n            department: data[key].department,\n          })\n        }\n        if (typeof courseId === 'object' && 'OR' in courseId && courseId.OR.length > 0) {\n          if (nodesArr.filter( n => n.id === key + \"_OR\").length > 0 ) {\n            return;\n          }\n          nodesArr.push({\n            id: key + \"_OR\",\n            label: 'TAKE EITHER',\n            title: key + \"_OR\",\n            department: data[key].department,\n            color: 'blue',\n          })\n          edgesArr.push({\n            from: key + \"_OR\",\n            to: key + \"_AND\",\n            color: '#D3D3D3',\n            department: data[key].department,\n          })\n          courseId.OR.forEach( orCourseId => {\n            edgesArr.push({\n              from: courseId,\n              to: key + \"_OR\",\n              color: '#D3D3D3',\n              department: data[key].department,\n            })\n          })\n        }\n      })\n    }\n    if (\"OR\" in data[key].prereqs) {\n      if (nodesArr.filter( n => n.id === key + \"_OR\").length > 0 ) {\n        return;\n      }\n      nodesArr.push({\n        id: key + \"_OR\",\n        label: 'TAKE EITHER',\n        title: key + \"_OR\",\n        department: data[key].department,\n        color: 'blue',\n      })\n      edgesArr.push({\n        from: key + \"_OR\",\n        to: key,\n        color: '#D3D3D3',\n        department: data[key].department,\n      })\n      data[key].prereqs.OR.forEach( courseId => {\n        if (typeof courseId === 'string') {\n          edgesArr.push({\n            from: courseId,\n            to: key + \"_OR\",\n            color: '#D3D3D3',\n            department: data[key].department,\n          })\n        }\n      })\n    }\n  }\n})\n\nlet departments = nodesArr.map(node => {\n  return node.department\n})\n\ndepartments = [...new Set(departments)]\n\n\nlet department_colors = {}\n\ndepartments.map(department => {\n  var randomColor = '#' +  Math.floor(Math.random()*16777215).toString(16);\n  department_colors[department] = randomColor;\n})\n\nnodesArr.forEach(node => {\n  node.color = department_colors[node.department]\n})\n\nfunction App() {\n\n\n  useEffect(() => {\n\n  },[])\n\n\n  const filteredTerms = ['CIS']\n  const newGraph = {\n    nodes: nodesArr.filter(node => filteredTerms.some( term => node.department === term)),\n    edges: edgesArr.filter(edge => filteredTerms.some( term => edge.department === term))\n  };\n\n  const [graph, setGraph] = useState({\n    graph: newGraph,\n    style: { width: \"100%\", height: \"100%\" },\n    network: null\n  })\n\n  const getNetwork = data => {\n    setGraph(prev => {\n      let prevObj = Object.assign({}, prev);\n      prevObj.network = data;\n      return prevObj;\n    })\n  }\n\n  const getEdges = data => {\n    console.log(data)\n  }\n  const getNodes = data => {\n    console.log(data)\n  }\n\n  const findCourseSequence = (graph) => {\n    findCourseSequence()\n  }\n\n  const neighbourhoodHighlight = (params, searchData) => {\n    let allNodes = graph.graph.nodes;\n    // let allEdges = graph.graph.edges;\n    // let cloneNodes = allNodes.map(a => {return {...a}});\n    let cloneNodes = allNodes.map(a => {return {...a}});\n    // let cloneEdges = allEdges.map(a => {return {...a}});\n    let selectedNode = params.node;\n    \n    cloneNodes.forEach( node => {\n      if (node.id === selectedNode) {\n        node.color = 'red'\n      }\n    })\n\n    let connectedNodes = graph.network.getConnectedNodes(selectedNode);\n    // let connectedEdges = graph.network.getConnectedEdges(selectedNode);\n\n    for (var node of connectedNodes) {\n      connectedNodes = connectedNodes.concat(\n        graph.network.getConnectedNodes(node)\n      )\n      // for (var n1 of graph.network.getConnectedNodes(node)) {\n      //   connectedNodes = connectedNodes.concat(\n      //     graph.network.getConnectedNodes(n1)\n      //   )\n      //   for (var n2 of graph.network.getConnectedNodes(n1)) {\n      //     connectedNodes = connectedNodes.concat(\n      //       graph.network.getConnectedNodes(n2)\n      //     )\n      //   }\n      // }\n      // connectedEdges = connectedEdges.concat(\n      //   graph.network.getConnectedEdges(node)\n      // )\n    }\n\n    cloneNodes.forEach( node => {\n      if (connectedNodes.some(name => node.id.includes(name))) {\n        node.color = 'red'\n      } else {\n        if (connectedNodes.length > 1) {\n          node.color = 'gray'\n        }\n      }\n    })\n\n    // graph.graph.edges.forEach( edge => {\n    //   if (connectedEdges.some(name => edge.id.includes(name))) {\n    //     console.log(edge)\n    //     edge.color = 'red'\n    //   }\n    // })\n\n\n\n    let newGraph = {\n      nodes: cloneNodes,\n      edges: graph.graph.edges\n    }\n    setGraph({\n      graph: newGraph,\n      style: { width: \"100%\", height: \"100%\" },\n      network: graph.network\n    })\n  }\n\n  const resetGraphColor = () => {\n    let allNodes = graph.graph.nodes;\n    // let cloneNodes = allNodes.map(a => {return {...a}});\n    let Nodes = allNodes\n    let cloneNodes = allNodes.map(a => {return {...a}});\n\n    cloneNodes.forEach( node => {\n      node.color = department_colors[node.department]\n    })\n\n    let newGraph = {\n      nodes: cloneNodes,\n      edges: graph.graph.edges\n    }\n    setGraph({\n      graph: newGraph,\n      style: { width: \"100%\", height: \"100%\" },\n      network: graph.network\n    })\n  }\n\n  const events = {\n    select: event => {\n      var { node, edges } = event;\n    },\n    hoverNode: event => {\n      neighbourhoodHighlight(event, {})\n    },\n    blurNode: event => {\n      resetGraphColor()\n    },\n    hoverEdge: event => {\n      let selectedEdge = graph.graph.edges.filter(edge => edge.id === event.edge)[0]\n      neighbourhoodHighlight({ node: selectedEdge.from }, {})\n      neighbourhoodHighlight({ node: selectedEdge.to }, {})\n    },\n    blurEdge: event => {\n      resetGraphColor()\n    }\n  }\n\n  const [filterOption, setFilterOption] = useState(['Computer and Information Science (CIS)']);\n  const [nodeNumber, setNodeNumer] = useState(0);\n  const [edgeNumber, setEdgeNumber] = useState(0);\n\n  useEffect(() => {\n    const newGraph = {\n      nodes: nodesArr.filter(node => filterOption.some( term => node.department.includes(term))),\n      edges: edgesArr.filter(edge => filterOption.some( term => edge.department.includes(term)))\n    };\n\n    setNodeNumer(nodesArr.filter(node => filterOption.some( term => node.department.includes(term))).length)\n    setEdgeNumber(edgesArr.filter(edge => filterOption.some( term => edge.department.includes(term))).length)\n\n    setGraph(prev => {\n      let prevObj = Object.assign({}, prev);\n      prevObj.graph = newGraph;\n      return prevObj;\n    })\n\n  }, [filterOption])\n\n  window.addEventListener('resize', () => {\n    if (graph.network !== null) {\n      graph.network.redraw()\n      graph.network.fit()\n    }\n  })\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setFilterOption(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  }\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 10 + ITEM_PADDING_TOP,\n      },\n    },\n  };\n\n  const theme = createTheme({\n    palette: {\n      primary: {\n        main: '#0000FF'\n      }\n    }\n  })\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <div\n        style={{\n          width: '100vw',\n          height: '100vh',\n          position: 'fixed'\n        }}\n        >\n          <Graph\n            graph={graph.graph}\n            style={graph.style}\n            options={options}\n            getNetwork={getNetwork}\n            getEdges={getEdges}\n            getNodes={getNodes}\n            events={events}\n          />\n        </div>\n        <Box\n        sx={{\n          position: 'fixed',\n          top: '20px',\n          left: '30px',\n          fontSize: '20px',\n          border: '1px solid blue',\n          borderRadius: '10px',\n          p: '10px 12px',\n          background: 'white',\n        }}\n        >\n          Penn Course Graph\n        </Box>\n        <Box\n        sx={{\n          position: 'fixed',\n          top: '20px',\n          right: '30px',\n          fontSize: '20px',\n          border: '1px solid blue',\n          borderRadius: '10px',\n          p: '10px 12px',\n          background: 'white',\n        }}\n        >\n          <Typography\n            sx={{\n              ml: 1.5,\n              textAlign: 'left',\n              color: 'blue',\n              fontSize: '16px'\n            }}\n          >\n            Display graph for the desired departments\n          </Typography>\n          <Box sx={{ m: 1 }} />\n          <FormControl sx={{ m: 1, width: 'fit-content', maxWidth: '800px' }}>\n          <InputLabel id=\"demo-multiple-checkbox-label\">Departments</InputLabel>\n          <Select\n            labelId=\"demo-multiple-checkbox-label\"\n            id=\"demo-multiple-checkbox\"\n            multiple\n            value={filterOption}\n            onChange={handleChange}\n            input={<OutlinedInput label=\"Departments\" />}\n            renderValue={(selected) => selected.join(', ')}\n            MenuProps={MenuProps}\n          >\n            {departments.map((name) => (\n              <MenuItem key={name} value={name}>\n                <Checkbox checked={filterOption.indexOf(name) > -1} />\n                <ListItemText primary={name} />\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <Box sx={{m: 1}} />\n        <Typography\n          sx={{\n            textAlign: 'left',\n            ml: 1.5,\n            color: 'blue',\n            fontSize: '16px'\n          }}\n        >\n          Graph Statistics\n        </Typography>\n        <Box sx={{ m: 1 }} />\n        <Stack\n          sx={{\n            ml: 1,\n          }}\n          direction='row' \n          spacing={2}>\n            <Chip color='primary' label={\"Num. Filters: \" + filterOption.length} />\n            <Chip color='primary' label={\"Num. Courses: \" + nodeNumber} />\n            <Chip color='primary' label={\"Num. Edges: \" + edgeNumber} />\n        </Stack>\n        </Box>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}